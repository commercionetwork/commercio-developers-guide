(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{380:function(e,t,o){"use strict";o.r(t);var n=o(42),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"_3-2-pairwise-did-primer"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-pairwise-did-primer"}},[e._v("#")]),e._v(" 3.2 Pairwise Did Primer")]),e._v(" "),o("h2",{attrs:{id:"tools"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[e._v("#")]),e._v(" Tools")]),e._v(" "),o("p",[e._v("We will use the "),o("em",[e._v("Commercio SDK")]),e._v(", our own open source tool to format transactions to Commercio.network and the "),o("em",[e._v("Sacco")]),e._v(" library, our own open source tool to sign and send transactions to any Cosmos SDK based blockchain, including Commercio.network.")]),e._v(" "),o("h2",{attrs:{id:"functions-and-apis"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#functions-and-apis"}},[e._v("#")]),e._v(" Functions and APIs")]),e._v(" "),o("p",[e._v("We will describe the system designed for the creation of pairwise identity.")]),e._v(" "),o("p",[e._v("This required the functions described in the following chapters. In particular, the most relevant methods are:")]),e._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/3-commercio-id/3.3-chapter.html"}},[e._v("Chapter 3.3")]),e._v(", IdHelper "),o("em",[e._v("setDidDocument")]),e._v(";")],1),e._v(" "),o("li",[o("RouterLink",{attrs:{to:"/3-commercio-id/3.4-chapter.html"}},[e._v("Chapter 3.4")]),e._v(", IdHelper "),o("em",[e._v("requestDidPowerUp")]),e._v(".")],1)]),e._v(" "),o("h2",{attrs:{id:"notations"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#notations"}},[e._v("#")]),e._v(" Notations")]),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("Acronym")]),e._v(" "),o("th",[e._v("Meaning")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[o("code",[e._v("I PU")])]),e._v(" "),o("td",[e._v("Public Identity "),o("code",[e._v("I")]),e._v(".")])]),e._v(" "),o("tr",[o("td",[o("code",[e._v("I DID")])]),e._v(" "),o("td",[e._v("Decentralized Identifier associated with the identity "),o("code",[e._v("I PU")]),e._v(".")])]),e._v(" "),o("tr",[o("td",[o("code",[e._v("I DDO")])]),e._v(" "),o("td",[e._v("Did Document associated with the "),o("code",[e._v("I DID")]),e._v(". Contains the Signature key and Encryption key associated with  "),o("code",[e._v("I PU")]),e._v(".")])]),e._v(" "),o("tr",[o("td",[o("code",[e._v("I VC")])]),e._v(" "),o("td",[e._v("Verifiable credentials associated with "),o("code",[e._v("I PU")]),e._v(". "),o("code",[e._v("I")]),e._v(" controls other accounts which it will use to activate Pairwise Identity with its interlocutors. These identities are indicated with IPW1, IPW2 ... IPWn, all complete with the related Did Documents.")])]),e._v(" "),o("tr",[o("td",[o("code",[e._v("T")])]),e._v(" "),o("td",[e._v("Service that sells packages of cash and offers the possibility, upon indication of a public account detected, to carry out the power up of the accounts in a coupled way. "),o("code",[e._v("T")]),e._v(" also has a public and verified account: "),o("code",[e._v("T DID")]),e._v(", "),o("code",[e._v("T DDO")]),e._v(" and "),o("code",[e._v("T VC")]),e._v(" from Government.")])]),e._v(" "),o("tr",[o("td",[o("code",[e._v("C")])]),e._v(" "),o("td",[e._v("Challenge, calculated by "),o("code",[e._v("I")]),e._v(", in order to indicate a unique quantity (collision-free).")])])])]),e._v(" "),o("h2",{attrs:{id:"step-by-step-sequence"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-by-step-sequence"}},[e._v("#")]),e._v(" Step by step sequence")]),e._v(" "),o("h3",{attrs:{id:"_1-ddo-creation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-ddo-creation"}},[e._v("#")]),e._v(" "),o("strong",[e._v("1 - DDO Creation")])]),e._v(" "),o("p",[e._v("First you need to create a "),o("code",[e._v("I DDO")]),e._v(" associated with to "),o("code",[e._v("I DID")]),e._v(" ("),o("RouterLink",{attrs:{to:"/3-commercio-id/3.3-chapter.html"}},[e._v("Chapter 3.3")]),e._v(").")],1),e._v(" "),o("h3",{attrs:{id:"_2-send-tokens-to-the-tumbler"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-send-tokens-to-the-tumbler"}},[e._v("#")]),e._v(" "),o("strong",[e._v("2 - Send tokens to the Tumbler")])]),e._v(" "),o("p",[e._v("The second step is to send the tokens ("),o("RouterLink",{attrs:{to:"/2-commercio-account/2.9-chapter.html"}},[e._v("Chapter 2.9")]),e._v(") to the public address of the centralized entity "),o("code",[e._v("T")]),e._v(".")],1),e._v(" "),o("h3",{attrs:{id:"_3-power-up-request"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-power-up-request"}},[e._v("#")]),e._v(" "),o("strong",[e._v("3 - Power Up Request")])]),e._v(" "),o("p",[e._v("Only after you send the tokens to "),o("code",[e._v("T")]),e._v(", finally you can create a Did power up request ("),o("RouterLink",{attrs:{to:"/3-commercio-id/3.4-chapter.html"}},[e._v("Chapter 3.4")]),e._v(").")],1),e._v(" "),o("h4",{attrs:{id:"_3-1-step-by-step"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-step-by-step"}},[e._v("#")]),e._v(" "),o("strong",[e._v("3.1 - Step by step")])]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" will create a JSON ("),o("code",[e._v("signature_json")]),e._v(") containing the following information:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('```json\n{\n  "sender_did": "<User did>",\n  "pairwise_did": "<Pairwise Did address to power up>",\n  "timestamp": "<Timestamp>"\n}\n```\n')])])]),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" retrive the Did of "),o("code",[e._v("T")]),e._v(" using public endpoint "),o("code",[e._v("/government/tumbler")]),e._v(" or by command "),o("code",[e._v("cncli query government tumbler-address")]),e._v(".")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" retrive the public key of "),o("code",[e._v("T")]),e._v(" resolving its DDO.")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" calculate SHA-256 "),o("code",[e._v("hash")]),e._v(" of "),o("code",[e._v("sender_did")]),e._v(", "),o("code",[e._v("pairwise_did")]),e._v(" and "),o("code",[e._v("timestamp")]),e._v(" concatenation.")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" get "),o("code",[e._v("sign(hash)")]),e._v(" signing in format PKCS1v15 the "),o("code",[e._v("hash")]),e._v(" with the RSA private key associated to RSA public key inserted in the DDO.")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" convert "),o("code",[e._v("sign(hash)")]),e._v(" in Base64 notation "),o("code",[e._v("base64(sign(hash))")]),e._v(" and use it to add "),o("code",[e._v("signature")]),e._v(" field.")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" create a "),o("code",[e._v("payload")]),e._v(" JSON made as follow:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('```json\n\n{\n  "sender_did": "<User did>",\n  "pairwise_did": "<Pairwise Did to power up>",\n  "timestamp": "<Timestamp>",\n  "signature": "base64(sign(hash))",\n}\n\n```\n')])])]),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" create a random AES-256 key "),o("code",[e._v("F")]),e._v(".")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" generate a random 96-bit nonce "),o("code",[e._v("N")]),e._v(".")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" encrypt the "),o("code",[e._v("payload")]),e._v(" using the "),o("code",[e._v("F")]),e._v(" AES-256 key.")]),e._v(" "),o("ol",[o("li",[o("code",[e._v("I")]),e._v(" remove all the white spaces and line ending characters.")]),e._v(" "),o("li",[o("code",[e._v("I")]),e._v(" encrypt the resulting string bytes using "),o("code",[e._v("F")]),e._v(", obtaining "),o("code",[e._v("ciphertext")]),e._v(". Note that the AES encryption method must be "),o("code",[e._v("AES-GCM")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("I")]),e._v(" concatenate bytes of "),o("code",[e._v("ciphertext")]),e._v(" and "),o("code",[e._v("N")]),e._v(" and encode the resulting bytes using the Base64 encoding method, obtaining "),o("code",[e._v("proof")]),e._v(".")])]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" encrypt the AES-256 key.")]),e._v(" "),o("ol",[o("li",[o("code",[e._v("I")]),e._v(" Encrypt the "),o("code",[e._v("F")]),e._v(" key bytes using the centralized system's RSA public key using PKCS1v15 mode.")]),e._v(" "),o("li",[o("code",[e._v("I")]),e._v(" Encode the resulting bytes using the Base64 encoding method, obtaining "),o("code",[e._v("proof_key")]),e._v(".")])]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" will create the transaction message as follows:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('```json\n{\n  "type": "commercio/MsgRequestDidPowerUp",\n  "value": {\n    "claimant": "<Address of the Did to fund>",\n    "amount": [\n      {\n        "amount": "<Amount of coins to be sent>",\n        "denom": "<Denom of the coin to send>"\n      }   \n    ],\n    "proof": "<proof>",\n    "id": "<uuid>",\n    "proof_key": "<proof_key>"\n  }\n}\n```\n')])])]),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("I")]),e._v(" will send a transaction of the "),o("code",[e._v("MsgRequestDidPowerUp")]),e._v(" type.")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('```golang\ntype MsgRequestDidPowerUp struct {\n  Claimant sdk.AccAddress `json:"claimant"`\n  Amount   sdk.Coins      `json:"amount"`\n  Proof    string         `json:"proof"`\n  ID       string         `json:"id"`\n  ProofKey string         `json:"proof_key"`\n}\n```\n')])])]),o("blockquote",[o("p",[o("strong",[e._v("Claimant")]),e._v(" is the public Did of who made the request (therefore the Signer of MsgRequirePowerupDid)")]),e._v(" "),o("p",[o("strong",[e._v("Amount")]),e._v(" is the quantity sent in the powerup request")]),e._v(" "),o("p",[o("strong",[e._v("Proof")]),e._v(" is the proof sent in the powerup request")])]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("T")]),e._v(" will be constantly listening for new transactions of the type described above. Once a new transaction is observed, it will decrypt the "),o("code",[e._v("proof_key")]),e._v(" using its own private decryption key, obtaining"),o("code",[e._v("F")]),e._v(" key.")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("T")]),e._v(" will decrypt the "),o("code",[e._v("payload")]),e._v(" using"),o("code",[e._v("aes_key")]),e._v(" and it will get "),o("code",[e._v("I DDO")]),e._v(" through the "),o("code",[e._v("I DID")]),e._v(" contained within the transaction")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("T")]),e._v(" will extract the public signature key of "),o("code",[e._v("I")]),e._v(" from the obtained "),o("code",[e._v("I DDO")]),e._v(" and it will verify the signature contained in the payload")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" "),o("code",[e._v("T")]),e._v(" will verify that  "),o("code",[e._v("I")]),e._v("  has sent a transferable amount of funds equal to or greater than that indicated in the transaction.")]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" If the transfer can be performed correctly, "),o("code",[e._v("T")]),e._v(" will perform an on-chain transaction containing two messages:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('```golang\ntype MsgSend struct {\n  FromAddress sdk.AccAddress `json:"from_address" yaml:"from_address"`\n  ToAddress   sdk.AccAddress `json:"to_address" yaml:"to_address"`\n  Amount      sdk.Coins      `json:"amount" yaml:"amount"`\n}\n\ntype MsgChangePowerUpStatus struct {\n  Recipient sdk.AccAddress `json:"recipient"`\n  PowerUpID string         `json:"id"`\n  Status    RequestStatus  `json:"status"`\n  Signer    sdk.AccAddress `json:"signer"`\n}\n```\n')])])]),o("blockquote",[o("p",[o("strong",[e._v("Status")]),e._v(" has the value "),o("code",[e._v("approved")])])]),e._v(" "),o("p",[o("strong",[e._v("-")]),e._v(" If the transfer cannot be performed correctly, "),o("code",[e._v("T")]),e._v(" will perform an on-chain transaction with this message:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('```golang\ntype MsgChangePowerUpStatus struct {\n  Recipient sdk.AccAddress `json:"recipient"`\n  PowerUpID string         `json:"id"`\n  Status    RequestStatus  `json:"status"`\n  Signer    sdk.AccAddress `json:"signer"`\n}\n```\n')])])]),o("blockquote",[o("p",[o("strong",[e._v("Status")]),e._v(" has the value "),o("code",[e._v("rejected")])]),e._v(" "),o("p",[o("strong",[e._v("Signer")]),e._v(" is the public "),o("code",[e._v("T DID")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);