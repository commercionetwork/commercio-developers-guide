(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{226:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_3-commercioid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-commercioid"}},[t._v("#")]),t._v(" 3. CommercioID")]),t._v(" "),e("h2",{attrs:{id:"_3-2-pairwise-did"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-pairwise-did"}},[t._v("#")]),t._v(" 3.2 Pairwise Did")]),t._v(" "),e("h3",{attrs:{id:"tools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[t._v("#")]),t._v(" Tools")]),t._v(" "),e("p",[t._v("We will use the CommercioSDK, our own open source tool to format transactions to Commercio.network\nand The "),e("em",[t._v("Sacco")]),t._v(" library, our own open source tool to sign and send transactions to any Cosmos SDK based blockchain, including Commercio.network.")]),t._v(" "),e("h3",{attrs:{id:"functions-and-apis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functions-and-apis"}},[t._v("#")]),t._v(" Functions and APIs")]),t._v(" "),e("p",[t._v("We will describe the system designed for the creation of pairwise identity.")]),t._v(" "),e("p",[t._v("This required the functions described in the following chapters. In particular:")]),t._v(" "),e("p",[t._v("chapter 3.3")]),t._v(" "),e("ul",[e("li",[t._v("IdHelper.setDidDocument(didDocument, wallet)")])]),t._v(" "),e("p",[t._v("chapter 3.4")]),t._v(" "),e("ul",[e("li",[t._v("IdHelper.requestDidDeposit(recipient, amount, wallet)")])]),t._v(" "),e("p",[t._v("chapter 3.5")]),t._v(" "),e("ul",[e("li",[t._v("IdHelper.requestDidPowerUp(pairwiseDid, amount, wallet)")])]),t._v(" "),e("h3",{attrs:{id:"notations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notations"}},[t._v("#")]),t._v(" Notations")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Acronym")]),t._v(" "),e("th",[t._v("Meaning")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("I PU")])]),t._v(" "),e("td",[t._v("Public Identity "),e("code",[t._v("I")]),t._v(", verified by TSP A (authorized by Government)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("I DID")])]),t._v(" "),e("td",[t._v("Decentralized Identifier associated with the identity "),e("code",[t._v("I PU")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("I DDO")])]),t._v(" "),e("td",[t._v("Did Document associated with the "),e("code",[t._v("I DID")]),t._v(". Contains the Signature key and Encryption key associated with "),e("code",[t._v("I PU")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("I VC")])]),t._v(" "),e("td",[t._v("Verifiable credentials associated with "),e("code",[t._v("I PU")]),t._v(". "),e("code",[t._v("I")]),t._v(" controls other accounts which it will use to activate Pairwise Identity with its interlocutors. These identities are indicated with IPW1, IPW2 ... IPWn, all complete with the related Did Documents.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("T")])]),t._v(" "),e("td",[t._v("Service that sells packages of cash and offers the possibility, upon indication of a public account detected, to carry out the power up of the accounts in a coupled way. "),e("code",[t._v("T")]),t._v(" also has a public and verified account: "),e("code",[t._v("T DID")]),t._v(", "),e("code",[t._v("T DDO")]),t._v(" and "),e("code",[t._v("T VC")]),t._v(" from TSP B")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("C")])]),t._v(" "),e("td",[t._v("Challenge, calculated by "),e("code",[t._v("I")]),t._v(", in order to indicate a unique quantity (collision-free)")])])])]),t._v(" "),e("h3",{attrs:{id:"step-by-step-sequence"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step-by-step-sequence"}},[t._v("#")]),t._v(" Step by step sequence")]),t._v(" "),e("h3",{attrs:{id:"_1-ddo-creation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-ddo-creation"}},[t._v("#")]),t._v(" "),e("strong",[t._v("1 - DDO Creation")])]),t._v(" "),e("p",[t._v("First you need to create a "),e("code",[t._v("I DDO")]),t._v(" associated with to "),e("code",[t._v("I DID")]),t._v(" (chapter 3.3).")]),t._v(" "),e("h3",{attrs:{id:"_2-deposit-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-deposit-request"}},[t._v("#")]),t._v(" "),e("strong",[t._v("2 - Deposit Request")])]),t._v(" "),e("p",[t._v("When you have the "),e("code",[t._v("I DDO")]),t._v(" , you can create a deposit request (chapter 3.4)")]),t._v(" "),e("p",[t._v("In this way "),e("code",[t._v("I")]),t._v(" through his account and public identity, opens a position on "),e("code",[t._v("T")]),t._v(", adding the sum K to "),e("code",[t._v("T")]),t._v("'s account.\nOnly "),e("code",[t._v("T")]),t._v(", through its decrytionKey, will be able to access the value "),e("code",[t._v("C")]),t._v(" and verify that "),e("code",[t._v("C")]),t._v(" has been calculated by "),e("code",[t._v("I")]),t._v(" through the signature affixed with  "),e("code",[t._v("I PU")]),t._v(" SigningKey.")]),t._v(" "),e("h4",{attrs:{id:"step-by-step"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step-by-step"}},[t._v("#")]),t._v(" Step by step")]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will create a JSON ("),e("code",[t._v("signature_json")]),t._v(") containing the following information:")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"recipient"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Did address of the recipient>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"timestamp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Timestamp>"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will create the signature of "),e("code",[t._v("signature_json")]),t._v(", using the following procedure:")]),t._v(" "),e("ol",[e("li",[t._v("Sort the JSON keys alphabetically")]),t._v(" "),e("li",[t._v("Removes all spaces and carriage returns")]),t._v(" "),e("li",[t._v("Sign the resulting string using your private signature key")])]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will create a JSON ("),e("code",[t._v("payload")]),t._v(") containing the following information:")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"recipient"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Did address of the recipient>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"timestamp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Timestamp>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signature"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Previously signed data, hex encoded>"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will generate a random AES-256 key. With this key,\n"),e("code",[t._v("I")]),t._v(" will encrypt everything by following the procedure below:")]),t._v(" "),e("ol",[e("li",[t._v("Remove all spaces and carriage returns from "),e("code",[t._v("payload")])]),t._v(" "),e("li",[t._v("Digit everything using the symmetric key")])]),t._v(" "),e("p",[t._v("and it will get the value of "),e("code",[t._v("proof")])]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v("  will encrypt the AES-256 key using the public encryption key of "),e("code",[t._v("T")]),t._v(", obtaining "),e("code",[t._v("encrypted_key")]),t._v(". Then "),e("code",[t._v("I")]),t._v(" will encode the "),e("code",[t._v("encrypted_key")]),t._v(" via hex.")]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will create the transaction message as follows:")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commercio/MsgRequireDidDeposit"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signer"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Acme S.p.A Did>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"amount"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"denom"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uccc"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"amount"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deposit_proof"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<proof>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"encryption_key"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<hex encoded encrypted AES-256 key>"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v("  will send a transaction of the "),e("code",[t._v("MsgRequireDidDeposit")]),t._v(" type.")]),t._v(" "),e("div",{staticClass:"language-golang line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('type MsgRequireDidDeposit struct {\n\tSigner        sdk.AccAddress `json:"signer"`\n\tAmount        sdk.Coins      `json:"amount"`\n\tDepositProof  string         `json:"deposit_proof"`\n\tEncryptionKey string         `json:"encryption_key"`\n}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("T")]),t._v(" will be constantly listening for new transactions of the type described above. Once a new transaction is observed, it will decrypt the "),e("code",[t._v("encrypted_key")]),t._v(" using its own private decryption key, obtaining"),e("code",[t._v("aes_key")])]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("T")]),t._v(" will decrypt the "),e("code",[t._v("payload")]),t._v(" using"),e("code",[t._v("aes_key")]),t._v(" and it will verify the "),e("code",[t._v("signature")]),t._v(" contained in "),e("code",[t._v("payload")])]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("T")]),t._v(" will add the indicated amount to local balance associated with the recipient and it will send a transaction of the "),e("code",[t._v("MsgSetDepositRequestHandled")]),t._v(" type.")]),t._v(" "),e("div",{staticClass:"language-golang line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('type MsgSetDepositRequestHandled struct {\n\tDepositProof string         `json:"deposit_proof"`\n\tClaimant     sdk.AccAddress `json:"claimant"`\n\tSigner       sdk.AccAddress `json:"signer"`\n}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h3",{attrs:{id:"_3-power-up-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-power-up-request"}},[t._v("#")]),t._v(" "),e("strong",[t._v("3 - Power Up Request")])]),t._v(" "),e("p",[t._v("Finally you can create a new Did power up request only after you made a did deposit request (chapter 3.5).")]),t._v(" "),e("h4",{attrs:{id:"step-by-step-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step-by-step-2"}},[t._v("#")]),t._v(" Step by step")]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will create a JSON ("),e("code",[t._v("signature_json")]),t._v(") containing the following information:")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pairwise_did"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Pairwise Did address to power up>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"timestamp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Timestamp>"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will create the signature of "),e("code",[t._v("signature_json")]),t._v(", using the following procedure:")]),t._v(" "),e("ol",[e("li",[t._v("Sort the JSON keys alphabetically")]),t._v(" "),e("li",[t._v("Removes all spaces and carriage returns")]),t._v(" "),e("li",[t._v("Sign the resulting string using your private signature key")])]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will create a JSON ("),e("code",[t._v("payload")]),t._v(") containing the following information:")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pairwise_did"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Pairwise Did to power up>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"timestamp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Timestamp>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signature"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Previously signed data, hex encoded>"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will generate a random AES-256 key. With this key,\n"),e("code",[t._v("I")]),t._v(" encrypts everything by following the procedure below:")]),t._v(" "),e("ol",[e("li",[t._v("Remove all spaces and carriage returns from the "),e("code",[t._v("payload")])]),t._v(" "),e("li",[t._v("Digit everything using the symmetric key")])]),t._v(" "),e("p",[t._v("and it will get the value of "),e("code",[t._v("proof")])]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will encrypt the AES-256 key using the public encryption key of "),e("code",[t._v("T")]),t._v(", obtaining "),e("code",[t._v("encrypted_key")]),t._v(". Then "),e("code",[t._v("I")]),t._v(" encodes  "),e("code",[t._v("encrypted_key")]),t._v(" via hex.")]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will create the transaction message as follows:")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commercio/MsgRequirePowerupDid"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signer"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Acme S.p.A Did>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"amount"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"denom"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uccc"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"amount"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10000000"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deposit_proof"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<proof>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"encryption_key"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<hex encoded encrypted AES-256 key>"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("I")]),t._v(" will send a transaction of the "),e("code",[t._v("MsgRequireDidDeposit")]),t._v(" type.")]),t._v(" "),e("div",{staticClass:"language-golang line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('type MsgRequirePowerupDid struct {\n\tAmount        sdk.Coins      `json:"amount"`\n\tPowerupProof  string         `json:"powerup_proof"`\n\tEncryptionKey string         `json:"encryption_key"`\n\tSigner        sdk.AccAddress `json:"signer"`\n}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("T")]),t._v(" will be constantly listening for new transactions of the type described above. Once a new transaction is observed, it will decrypt the "),e("code",[t._v("encrypted_key")]),t._v(" using its own private decryption key, obtaining"),e("code",[t._v("aes_key")])]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("T")]),t._v(" will decrypt the "),e("code",[t._v("payload")]),t._v(" using"),e("code",[t._v("aes_key")]),t._v(" and it will get\n"),e("code",[t._v("I DDO")]),t._v(" through the "),e("code",[t._v("I DID")]),t._v(" contained within the transaction")]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("T")]),t._v(" will extract the public signature key of "),e("code",[t._v("I")]),t._v(" from the obtained "),e("code",[t._v("I DDO")]),t._v(" and it will verify the signature contained in the payload")]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" "),e("code",[t._v("T")]),t._v(" will verify that  "),e("code",[t._v("I")]),t._v("  has, in the local balance of  "),e("code",[t._v("T")]),t._v(" , a transferable amount of funds equal to or greater than that indicated in the transaction.")]),t._v(" "),e("p",[e("strong",[t._v("-")]),t._v(" If the transfer can be performed correctly, "),e("code",[t._v("T")]),t._v(" will perform an on-chain transaction with this message:")]),t._v(" "),e("div",{staticClass:"language-golang line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('type MsgPowerupDid struct {\n\tAmount       sdk.Coins      `json:"amount"`\n\tPowerupProof string         `json:"powerup_proof"`\n\tClaimant     sdk.AccAddress `json:"claimant"`\n\tSigner       sdk.AccAddress `json:"signer"`\n}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("-")]),t._v(" If the transfer cannot be performed correctly, "),e("code",[t._v("T")]),t._v(" will perform an on-chain transaction with this message:")]),t._v(" "),e("div",{staticClass:"language-golang line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('type MsgInvalidateDidPowerupRequest struct {\n\tPowerupProof string         `json:"powerup_proof"`\n\tClaimant     sdk.AccAddress `json:"claimant"`\n\tSigner       sdk.AccAddress `json:"signer"`\n}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("Claimant")]),t._v(" is the public Did of who made the request (therefore the Signer of MsgRequirePowerupDid)")]),t._v(" "),e("p",[e("strong",[t._v("Signer")]),t._v(" is the public "),e("code",[t._v("T DID")])]),t._v(" "),e("p",[e("strong",[t._v("Amount")]),t._v(" is the quantity sent in the powerup request")]),t._v(" "),e("p",[e("strong",[t._v("PowerupProof")]),t._v(" is the proof sent in the powerup request")])])}),[],!1,null,null,null);s.default=n.exports}}]);